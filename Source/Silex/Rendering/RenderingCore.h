
#pragma once
#include "Core/Core.h"


namespace Silex
{
    enum : uint32
    {
        INVALID_RENDER_ID = UINT32_MAX,
    };

    using QueueFamily = uint32;

    using Surface       = Handle;
    using CommandQueue  = Handle;
    using CommandPool   = Handle;
    using CommandBuffer = Handle;
    using Fence         = Handle;
    using Semaphore     = Handle;
    using SwapChain     = Handle;
    using RenderPass    = Handle;

    using FramebufferHandle = Handle;


    using BufferHandle       = Handle;
    using TextureHandle      = Handle;
    using SamplerHandle      = Handle;
    using VertexFormatHandle = Handle;
    using ShaderHandle       = Handle;
    using UniformSetHandle   = Handle;
    using PipelineHandle     = Handle;

    // コマンドバッファタイプ
    enum CommandBufferType
    {
        COMMAND_BUFFER_TYPE_PRIMARY,
        COMMAND_BUFFER_TYPE_SECONDARY,
    };

    // 各GPUのベンダーIDっぽい
    enum DeviceVendor
    {
        DEVICE_VENDOR_UNKNOWN   = 0x0000,
        DEVICE_VENDOR_AMD       = 0x1002,
        DEVICE_VENDOR_IMGTEC    = 0x1010,
        DEVICE_VENDOR_APPLE     = 0x106B,
        DEVICE_VENDOR_NVIDIA    = 0x10DE,
        DEVICE_VENDOR_ARM       = 0x13B5,
        DEVICE_VENDOR_MICROSOFT = 0x1414,
        DEVICE_VENDOR_QUALCOMM  = 0x5143,
        DEVICE_VENDOR_INTEL     = 0x8086,
    };

    enum DeviceType
    {
        DEVICE_TYPE_UNKNOW         = 0,
        DEVICE_TYPE_INTEGRATED_GPU = 1,
        DEVICE_TYPE_DISCRETE_GPU   = 2,
        DEVICE_TYPE_VIRTUAL_GPU    = 3,
        DEVICE_TYPE_CPU            = 4,
        DEVICE_TYPE_MAX            = 5,
    };

    struct DeviceInfo
    {
        std::string  name   = "Unknown";
        DeviceVendor vendor = DEVICE_VENDOR_UNKNOWN;
        DeviceType   type   = DEVICE_TYPE_UNKNOW;
    };

    enum RenderingFormat
    {
        RENDERING_FORMAT_UNDEFINE,
        RENDERING_FORMAT_R4G4_UNORM_PACK8,
        RENDERING_FORMAT_R4G4B4A4_UNORM_PACK16,
        RENDERING_FORMAT_B4G4R4A4_UNORM_PACK16,
        RENDERING_FORMAT_R5G6B5_UNORM_PACK16,
        RENDERING_FORMAT_B5G6R5_UNORM_PACK16,
        RENDERING_FORMAT_R5G5B5A1_UNORM_PACK16,
        RENDERING_FORMAT_B5G5R5A1_UNORM_PACK16,
        RENDERING_FORMAT_A1R5G5B5_UNORM_PACK16,
        RENDERING_FORMAT_R8_UNORM,
        RENDERING_FORMAT_R8_SNORM,
        RENDERING_FORMAT_R8_USCALED,
        RENDERING_FORMAT_R8_SSCALED,
        RENDERING_FORMAT_R8_UINT,
        RENDERING_FORMAT_R8_SINT,
        RENDERING_FORMAT_R8_SRGB,
        RENDERING_FORMAT_R8G8_UNORM,
        RENDERING_FORMAT_R8G8_SNORM,
        RENDERING_FORMAT_R8G8_USCALED,
        RENDERING_FORMAT_R8G8_SSCALED,
        RENDERING_FORMAT_R8G8_UINT,
        RENDERING_FORMAT_R8G8_SINT,
        RENDERING_FORMAT_R8G8_SRGB,
        RENDERING_FORMAT_R8G8B8_UNORM,
        RENDERING_FORMAT_R8G8B8_SNORM,
        RENDERING_FORMAT_R8G8B8_USCALED,
        RENDERING_FORMAT_R8G8B8_SSCALED,
        RENDERING_FORMAT_R8G8B8_UINT,
        RENDERING_FORMAT_R8G8B8_SINT,
        RENDERING_FORMAT_R8G8B8_SRGB,
        RENDERING_FORMAT_B8G8R8_UNORM,
        RENDERING_FORMAT_B8G8R8_SNORM,
        RENDERING_FORMAT_B8G8R8_USCALED,
        RENDERING_FORMAT_B8G8R8_SSCALED,
        RENDERING_FORMAT_B8G8R8_UINT,
        RENDERING_FORMAT_B8G8R8_SINT,
        RENDERING_FORMAT_B8G8R8_SRGB,
        RENDERING_FORMAT_R8G8B8A8_UNORM,
        RENDERING_FORMAT_R8G8B8A8_SNORM,
        RENDERING_FORMAT_R8G8B8A8_USCALED,
        RENDERING_FORMAT_R8G8B8A8_SSCALED,
        RENDERING_FORMAT_R8G8B8A8_UINT,
        RENDERING_FORMAT_R8G8B8A8_SINT,
        RENDERING_FORMAT_R8G8B8A8_SRGB,
        RENDERING_FORMAT_B8G8R8A8_UNORM,
        RENDERING_FORMAT_B8G8R8A8_SNORM,
        RENDERING_FORMAT_B8G8R8A8_USCALED,
        RENDERING_FORMAT_B8G8R8A8_SSCALED,
        RENDERING_FORMAT_B8G8R8A8_UINT,
        RENDERING_FORMAT_B8G8R8A8_SINT,
        RENDERING_FORMAT_B8G8R8A8_SRGB,
        RENDERING_FORMAT_A8B8G8R8_UNORM_PACK32,
        RENDERING_FORMAT_A8B8G8R8_SNORM_PACK32,
        RENDERING_FORMAT_A8B8G8R8_USCALED_PACK32,
        RENDERING_FORMAT_A8B8G8R8_SSCALED_PACK32,
        RENDERING_FORMAT_A8B8G8R8_UINT_PACK32,
        RENDERING_FORMAT_A8B8G8R8_SINT_PACK32,
        RENDERING_FORMAT_A8B8G8R8_SRGB_PACK32,
        RENDERING_FORMAT_A2R10G10B10_UNORM_PACK32,
        RENDERING_FORMAT_A2R10G10B10_SNORM_PACK32,
        RENDERING_FORMAT_A2R10G10B10_USCALED_PACK32,
        RENDERING_FORMAT_A2R10G10B10_SSCALED_PACK32,
        RENDERING_FORMAT_A2R10G10B10_UINT_PACK32,
        RENDERING_FORMAT_A2R10G10B10_SINT_PACK32,
        RENDERING_FORMAT_A2B10G10R10_UNORM_PACK32,
        RENDERING_FORMAT_A2B10G10R10_SNORM_PACK32,
        RENDERING_FORMAT_A2B10G10R10_USCALED_PACK32,
        RENDERING_FORMAT_A2B10G10R10_SSCALED_PACK32,
        RENDERING_FORMAT_A2B10G10R10_UINT_PACK32,
        RENDERING_FORMAT_A2B10G10R10_SINT_PACK32,
        RENDERING_FORMAT_R16_UNORM,
        RENDERING_FORMAT_R16_SNORM,
        RENDERING_FORMAT_R16_USCALED,
        RENDERING_FORMAT_R16_SSCALED,
        RENDERING_FORMAT_R16_UINT,
        RENDERING_FORMAT_R16_SINT,
        RENDERING_FORMAT_R16_SFLOAT,
        RENDERING_FORMAT_R16G16_UNORM,
        RENDERING_FORMAT_R16G16_SNORM,
        RENDERING_FORMAT_R16G16_USCALED,
        RENDERING_FORMAT_R16G16_SSCALED,
        RENDERING_FORMAT_R16G16_UINT,
        RENDERING_FORMAT_R16G16_SINT,
        RENDERING_FORMAT_R16G16_SFLOAT,
        RENDERING_FORMAT_R16G16B16_UNORM,
        RENDERING_FORMAT_R16G16B16_SNORM,
        RENDERING_FORMAT_R16G16B16_USCALED,
        RENDERING_FORMAT_R16G16B16_SSCALED,
        RENDERING_FORMAT_R16G16B16_UINT,
        RENDERING_FORMAT_R16G16B16_SINT,
        RENDERING_FORMAT_R16G16B16_SFLOAT,
        RENDERING_FORMAT_R16G16B16A16_UNORM,
        RENDERING_FORMAT_R16G16B16A16_SNORM,
        RENDERING_FORMAT_R16G16B16A16_USCALED,
        RENDERING_FORMAT_R16G16B16A16_SSCALED,
        RENDERING_FORMAT_R16G16B16A16_UINT,
        RENDERING_FORMAT_R16G16B16A16_SINT,
        RENDERING_FORMAT_R16G16B16A16_SFLOAT,
        RENDERING_FORMAT_R32_UINT,
        RENDERING_FORMAT_R32_SINT,
        RENDERING_FORMAT_R32_SFLOAT,
        RENDERING_FORMAT_R32G32_UINT,
        RENDERING_FORMAT_R32G32_SINT,
        RENDERING_FORMAT_R32G32_SFLOAT,
        RENDERING_FORMAT_R32G32B32_UINT,
        RENDERING_FORMAT_R32G32B32_SINT,
        RENDERING_FORMAT_R32G32B32_SFLOAT,
        RENDERING_FORMAT_R32G32B32A32_UINT,
        RENDERING_FORMAT_R32G32B32A32_SINT,
        RENDERING_FORMAT_R32G32B32A32_SFLOAT,
        RENDERING_FORMAT_R64_UINT,
        RENDERING_FORMAT_R64_SINT,
        RENDERING_FORMAT_R64_SFLOAT,
        RENDERING_FORMAT_R64G64_UINT,
        RENDERING_FORMAT_R64G64_SINT,
        RENDERING_FORMAT_R64G64_SFLOAT,
        RENDERING_FORMAT_R64G64B64_UINT,
        RENDERING_FORMAT_R64G64B64_SINT,
        RENDERING_FORMAT_R64G64B64_SFLOAT,
        RENDERING_FORMAT_R64G64B64A64_UINT,
        RENDERING_FORMAT_R64G64B64A64_SINT,
        RENDERING_FORMAT_R64G64B64A64_SFLOAT,
        RENDERING_FORMAT_B10G11R11_UFLOAT_PACK32,
        RENDERING_FORMAT_E5B9G9R9_UFLOAT_PACK32,
        RENDERING_FORMAT_D16_UNORM,
        RENDERING_FORMAT_X8_D24_UNORM_PACK32,
        RENDERING_FORMAT_D32_SFLOAT,
        RENDERING_FORMAT_S8_UINT,
        RENDERING_FORMAT_D16_UNORM_S8_UINT,
        RENDERING_FORMAT_D24_UNORM_S8_UINT,
        RENDERING_FORMAT_D32_SFLOAT_S8_UINT,
        RENDERING_FORMAT_BC1_RGB_UNORM_BLOCK,
        RENDERING_FORMAT_BC1_RGB_SRGB_BLOCK,
        RENDERING_FORMAT_BC1_RGBA_UNORM_BLOCK,
        RENDERING_FORMAT_BC1_RGBA_SRGB_BLOCK,
        RENDERING_FORMAT_BC2_UNORM_BLOCK,
        RENDERING_FORMAT_BC2_SRGB_BLOCK,
        RENDERING_FORMAT_BC3_UNORM_BLOCK,
        RENDERING_FORMAT_BC3_SRGB_BLOCK,
        RENDERING_FORMAT_BC4_UNORM_BLOCK,
        RENDERING_FORMAT_BC4_SNORM_BLOCK,
        RENDERING_FORMAT_BC5_UNORM_BLOCK,
        RENDERING_FORMAT_BC5_SNORM_BLOCK,
        RENDERING_FORMAT_BC6H_UFLOAT_BLOCK,
        RENDERING_FORMAT_BC6H_SFLOAT_BLOCK,
        RENDERING_FORMAT_BC7_UNORM_BLOCK,
        RENDERING_FORMAT_BC7_SRGB_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,
        RENDERING_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,
        RENDERING_FORMAT_EAC_R11_UNORM_BLOCK,
        RENDERING_FORMAT_EAC_R11_SNORM_BLOCK,
        RENDERING_FORMAT_EAC_R11G11_UNORM_BLOCK,
        RENDERING_FORMAT_EAC_R11G11_SNORM_BLOCK,
        RENDERING_FORMAT_ASTC_4x4_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_4x4_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_5x4_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_5x4_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_5x5_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_5x5_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_6x5_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_6x5_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_6x6_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_6x6_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_8x5_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_8x5_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_8x6_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_8x6_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_8x8_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_8x8_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_10x5_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_10x5_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_10x6_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_10x6_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_10x8_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_10x8_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_10x10_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_10x10_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_12x10_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_12x10_SRGB_BLOCK,
        RENDERING_FORMAT_ASTC_12x12_UNORM_BLOCK,
        RENDERING_FORMAT_ASTC_12x12_SRGB_BLOCK,
        RENDERING_FORMAT_G8B8G8R8_422_UNORM,
        RENDERING_FORMAT_B8G8R8G8_422_UNORM,
        RENDERING_FORMAT_G8_B8_R8_3PLANE_420_UNORM,
        RENDERING_FORMAT_G8_B8R8_2PLANE_420_UNORM,
        RENDERING_FORMAT_G8_B8_R8_3PLANE_422_UNORM,
        RENDERING_FORMAT_G8_B8R8_2PLANE_422_UNORM,
        RENDERING_FORMAT_G8_B8_R8_3PLANE_444_UNORM,
        RENDERING_FORMAT_R10X6_UNORM_PACK16,
        RENDERING_FORMAT_R10X6G10X6_UNORM_2PACK16,
        RENDERING_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
        RENDERING_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
        RENDERING_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
        RENDERING_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
        RENDERING_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
        RENDERING_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
        RENDERING_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
        RENDERING_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
        RENDERING_FORMAT_R12X4_UNORM_PACK16,
        RENDERING_FORMAT_R12X4G12X4_UNORM_2PACK16,
        RENDERING_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
        RENDERING_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
        RENDERING_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
        RENDERING_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
        RENDERING_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
        RENDERING_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
        RENDERING_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
        RENDERING_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
        RENDERING_FORMAT_G16B16G16R16_422_UNORM,
        RENDERING_FORMAT_B16G16R16G16_422_UNORM,
        RENDERING_FORMAT_G16_B16_R16_3PLANE_420_UNORM,
        RENDERING_FORMAT_G16_B16R16_2PLANE_420_UNORM,
        RENDERING_FORMAT_G16_B16_R16_3PLANE_422_UNORM,
        RENDERING_FORMAT_G16_B16R16_2PLANE_422_UNORM,
        RENDERING_FORMAT_G16_B16_R16_3PLANE_444_UNORM,

        RENDERING_FORMAT_MAX,
    };

    enum QueueFamilyBits
    {
        QUEUE_FAMILY_GRAPHICS_BIT = 0x1,
        QUEUE_FAMILY_COMPUTE_BIT  = 0x2,
        QUEUE_FAMILY_TRANSFER_BIT = 0x4,
    };

    enum PipelineStageBits
    {
        PIPELINE_STAGE_TOP_OF_PIPE_BIT                    = (1 << 0),
        PIPELINE_STAGE_DRAW_INDIRECT_BIT                  = (1 << 1),
        PIPELINE_STAGE_VERTEX_INPUT_BIT                   = (1 << 2),
        PIPELINE_STAGE_VERTEX_SHADER_BIT                  = (1 << 3),
        PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT    = (1 << 4),
        PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = (1 << 5),
        PIPELINE_STAGE_GEOMETRY_SHADER_BIT                = (1 << 6),
        PIPELINE_STAGE_FRAGMENT_SHADER_BIT                = (1 << 7),
        PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT           = (1 << 8),
        PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT            = (1 << 9),
        PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT        = (1 << 10),
        PIPELINE_STAGE_COMPUTE_SHADER_BIT                 = (1 << 11),
        PIPELINE_STAGE_TRANSFER_BIT                       = (1 << 12),
        PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT                 = (1 << 13),
        PIPELINE_STAGE_ALL_GRAPHICS_BIT                   = (1 << 15),
        PIPELINE_STAGE_ALL_COMMANDS_BIT                   = (1 << 16),
    };

    enum BarrierAccessBits
    {
        BARRIER_ACCESS_INDIRECT_COMMAND_READ_BIT          = (1 << 0),
        BARRIER_ACCESS_INDEX_READ_BIT                     = (1 << 1),
        BARRIER_ACCESS_VERTEX_ATTRIBUTE_READ_BIT          = (1 << 2),
        BARRIER_ACCESS_UNIFORM_READ_BIT                   = (1 << 3),
        BARRIER_ACCESS_INPUT_ATTACHMENT_READ_BIT          = (1 << 4),
        BARRIER_ACCESS_SHADER_READ_BIT                    = (1 << 5),
        BARRIER_ACCESS_SHADER_WRITE_BIT                   = (1 << 6),
        BARRIER_ACCESS_COLOR_ATTACHMENT_READ_BIT          = (1 << 7),
        BARRIER_ACCESS_COLOR_ATTACHMENT_WRITE_BIT         = (1 << 8),
        BARRIER_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT  = (1 << 9),
        BARRIER_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = (1 << 10),
        BARRIER_ACCESS_TRANSFER_READ_BIT                  = (1 << 11),
        BARRIER_ACCESS_TRANSFER_WRITE_BIT                 = (1 << 12),
        BARRIER_ACCESS_HOST_READ_BIT                      = (1 << 13),
        BARRIER_ACCESS_HOST_WRITE_BIT                     = (1 << 14),
        BARRIER_ACCESS_MEMORY_READ_BIT                    = (1 << 15),
        BARRIER_ACCESS_MEMORY_WRITE_BIT                   = (1 << 16),
    };

    enum TextureType
    {
        TEXTURE_TYPE_1D,
        TEXTURE_TYPE_2D,
        TEXTURE_TYPE_3D,
        TEXTURE_TYPE_CUBE,
        TEXTURE_TYPE_1D_ARRAY,
        TEXTURE_TYPE_2D_ARRAY,
        TEXTURE_TYPE_CUBE_ARRAY,

        TEXTURE_TYPE_MAX,
    };

    enum TextureSamples
    {
        TEXTURE_SAMPLES_1,
        TEXTURE_SAMPLES_2,
        TEXTURE_SAMPLES_4,
        TEXTURE_SAMPLES_8,
        TEXTURE_SAMPLES_16,
        TEXTURE_SAMPLES_32,
        TEXTURE_SAMPLES_64,

        TEXTURE_SAMPLES_MAX,
    };

    enum TextureLayout
    {
        TEXTURE_LAYOUT_UNDEFINED,
        TEXTURE_LAYOUT_GENERAL,
        TEXTURE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
        TEXTURE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
        TEXTURE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
        TEXTURE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
        TEXTURE_LAYOUT_TRANSFER_SRC_OPTIMAL,
        TEXTURE_LAYOUT_TRANSFER_DST_OPTIMAL,
        TEXTURE_LAYOUT_PREINITIALIZED,

        TEXTURE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000,
        TEXTURE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001,
        TEXTURE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL                   = 1000241000,
        TEXTURE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL                    = 1000241001,
        TEXTURE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL                 = 1000241002,
        TEXTURE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL                  = 1000241003,
        TEXTURE_LAYOUT_READ_ONLY_OPTIMAL                          = 1000314000,
        TEXTURE_LAYOUT_ATTACHMENT_OPTIMAL                         = 1000314001,
        TEXTURE_LAYOUT_PRESENT_SRC                                = 1000001002,
    };

    enum TextureAspect
    {
        TEXTURE_ASPECT_COLOR   = 0,
        TEXTURE_ASPECT_DEPTH   = 1,
        TEXTURE_ASPECT_STENCIL = 2,

        TEXTURE_ASPECT_MAX
    };

    enum TextureAspectBits
    {
        TEXTURE_ASPECT_COLOR_BIT   = (1 << TEXTURE_ASPECT_COLOR),
        TEXTURE_ASPECT_DEPTH_BIT   = (1 << TEXTURE_ASPECT_DEPTH),
        TEXTURE_ASPECT_STENCIL_BIT = (1 << TEXTURE_ASPECT_STENCIL),
    };

    enum AttachmentLoadOp
    {
        ATTACHMENT_LOAD_OP_LOAD      = 0,
        ATTACHMENT_LOAD_OP_CLEAR     = 1,
        ATTACHMENT_LOAD_OP_DONT_CARE = 2,
    };

    enum AttachmentStoreOp
    {
        ATTACHMENT_STORE_OP_STORE     = 0,
        ATTACHMENT_STORE_OP_DONT_CARE = 1,
    };

    struct Attachment
    {
        RenderingFormat   format         = RENDERING_FORMAT_MAX;
        TextureSamples    samples        = TEXTURE_SAMPLES_MAX;
        AttachmentLoadOp  loadOp         = ATTACHMENT_LOAD_OP_DONT_CARE;
        AttachmentStoreOp storeOp        = ATTACHMENT_STORE_OP_DONT_CARE;
        AttachmentLoadOp  stencilLoadOp  = ATTACHMENT_LOAD_OP_DONT_CARE;
        AttachmentStoreOp stencilStoreOp = ATTACHMENT_STORE_OP_DONT_CARE;
        TextureLayout     initialLayout  = TEXTURE_LAYOUT_UNDEFINED;
        TextureLayout     finalLayout    = TEXTURE_LAYOUT_UNDEFINED;
    };

    struct AttachmentReference
    {
        uint32            attachment = INVALID_RENDER_ID;
        TextureLayout     layout     = TEXTURE_LAYOUT_UNDEFINED;
        TextureAspectBits aspect;
    };

    struct Subpass
    {
        std::vector<AttachmentReference> inputReferences;
        std::vector<AttachmentReference> colorReferences;
        AttachmentReference              depthstencilReference;
        AttachmentReference              resolveReferences;
        std::vector<uint32>              preserveAttachments;
    };

    struct SubpassDependency
    {
        uint32            srcSubpass = INVALID_RENDER_ID;
        uint32            dstSubpass = INVALID_RENDER_ID;
        PipelineStageBits srcStages;
        PipelineStageBits dstStages;
        BarrierAccessBits srcAccess;
        BarrierAccessBits dstAccess;
    };
}
